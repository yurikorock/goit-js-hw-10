{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Напиши скрипт, який після сабміту форми створює проміс. В середині колбека цього промісу через вказану користувачем кількість мілісекунд проміс має виконуватися (при fulfilled) або відхилятися (при rejected), залежно від обраної опції в радіокнопках. Значенням промісу, яке передається як аргумент у методи resolve/reject, має бути значення затримки в мілісекундах.\n\n// Створений проміс треба опрацювати у відповідних для вдалого/невдалого виконання методах.\n\n// Якщо проміс виконується вдало, виводь у консоль наступний рядок, де delay — це значення затримки виклику промісу в мілісекундах.\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\n\nconst btnSubmit = document.querySelector('button[type=\"submit\"]');\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nform.addEventListener('submit', event => {\n  // console.log('Button pushed');\n  event.preventDefault();\n\n  let delay = Number(inputDelay.value);\n  // console.log('delayValue:', delay);\n\n  const inputRadio = document.querySelector('input[name=\"state\"]:checked');\n  let state = inputRadio.value;\n  // console.log('stateValue:', state);\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(`✅ Fulfilled promise in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  // console.log(promise); // Об'єкт промісу\n\n  promise\n    .then(value => {\n      // console.log(value); // `✅ Fulfilled promise in ${delay}ms`\n      iziToast.show({\n        imageWidth: 50,\n        message: `✅ Fulfilled promise in ${delay}ms`,\n        messageColor: 'white',\n        backgroundColor: '#59a10d',\n        position: 'topRight',\n        class: 'custom-toast',\n      });\n    })\n    .catch(error => {\n      // console.log(error); // `❌ Rejected promise in ${delay}ms`\n      iziToast.show({\n        imageWidth: 50,\n        message: `❌ Rejected promise in ${delay}ms`,\n        messageColor: 'white',\n        backgroundColor: '#ef4040',\n        position: 'topRight',\n        class: 'custom-toast',\n      });\n    });\n});\n"],"names":["form","inputDelay","event","delay","state","resolve","reject","value","iziToast","error"],"mappings":"wIAMA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAa,SAAS,cAAc,qBAAqB,EAE7C,SAAS,cAAc,uBAAuB,EAKhED,EAAK,iBAAiB,SAAUE,GAAS,CAEvCA,EAAM,eAAc,EAEpB,IAAIC,EAAQ,OAAOF,EAAW,KAAK,EAI/BG,EADe,SAAS,cAAc,6BAA6B,EAChD,MAGP,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXF,IAAU,YACZC,EAAQ,0BAA0BF,CAAK,IAAI,EAE3CG,EAAO,yBAAyBH,CAAK,IAAI,CAE5C,EAAEA,CAAK,CACZ,CAAG,EAKE,KAAKI,GAAS,CAEbC,EAAS,KAAK,CACZ,WAAY,GACZ,QAAS,0BAA0BL,CAAK,KACxC,aAAc,QACd,gBAAiB,UACjB,SAAU,WACV,MAAO,cACf,CAAO,CACP,CAAK,EACA,MAAMM,GAAS,CAEdD,EAAS,KAAK,CACZ,WAAY,GACZ,QAAS,yBAAyBL,CAAK,KACvC,aAAc,QACd,gBAAiB,UACjB,SAAU,WACV,MAAO,cACf,CAAO,CACP,CAAK,CACL,CAAC"}